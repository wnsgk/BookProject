spring:
  server:
    servlet:
      timeout: 30m

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/booksql?serverTimezone=Asia/Seoul
    username: root
    password: wnsgk123


  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 1031965508463-lfmqeg8qjg7el0sqovh3c02slbv58p22.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile

          facebook:
            client-id: 829259784949638
            client-secret: b62c8526220058c0fd1486e105aecaf7
            scope:
              - email
              - public_profile

          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: 1kgXdpfregTAiIdzuqu1
            client-secret: sQ0zTZCLC8
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

